require('dotenv').config()
const { Bot, GrammyError, HttpError, InlineKeyboard } = require('grammy');

const bot = new Bot(process.env.API_KEY);





//–°–ü–ò–°–û–ö –î–û–°–¢–£–ü–ù–´–• –ö–û–ú–ê–ù–î

bot.api.setMyCommands([
    {
        command: 'start',
        description: '–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞',
    },
]);






//–í–°–ï –ö–û–õ–ë–≠–ö–ò –ò –ö–û–ú–ê–ù–î–´

bot.command('start', async (ctx) => {
    const inlineKeyboard = new InlineKeyboard()

    .text('–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)', '#1')
    .row()
    .text('–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ (1000—Ä—É–±–ª–µ–π)', '#2');


console.log(ctx.from), await ctx.reply('<b>üé∞–ü–†–ï–î–°–¢–ê–í–¨–¢–ï –°–ï–ë–ï –ú–ò–† –ì–î–ï –£–î–ê–ß–ê –í–°–ï–ì–î–ê –ù–ê –í–ê–®–ï–ô –°–¢–û–†–û–ù–ï!üí≤</b>\n\n–Ø ‚Äì –±—ã–≤—à–∏–π —á–ª–µ–Ω <i>–≠–õ–ò–¢–ù–û–ô</i> –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –ø–æ —Å–±–æ—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–Ω–ª–∞–π–Ω-–∫–∞–∑–∏–Ω–æüí∞ü§ë\n\n–ò —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–µ–∫—Ä–µ—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–º–µ–Ω–∏—Ç –≤–∞—à—É –∏–≥—Ä—É –Ω–∞–≤—Å–µ–≥–¥–∞‚ú®!\n\n–ü–æ–∑–≤–æ–ª—å—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º —Å—Ç—Ä–∞—Ç–µ–≥–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –æ—à–µ–ª–æ–º–ª—è—é—â–µ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é 97,6%!üéâ\n\n–≠—Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è —Å–¥–µ–ª–∞–µ—Ç –≤–∞—à—É –∏–≥—Ä—É –≤ "Lucky Jet" –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–π –∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –ø—Ä–∏–±—ã–ª—å–Ω–æ–π.ü§ë\n\n–ì–æ—Ç–æ–≤—ã –∏—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É –∏ –≤—ã–∏–≥—Ä–∞—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –∫–æ–≥–¥–∞-–ª–∏–±–æ?üí∞üí∞üí∞\n\n<b>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –∏ —É–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –ö–ê–ñ–î–£–Æ –∏–≥—Ä—É –≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—Å–ø–µ—Ö!</b>ü§©ü§©ü§©', {
    parse_mode: 'HTML',
    reply_markup: inlineKeyboard
})
})

bot.callbackQuery('#2', async (ctx) => {
    await ctx.answerCallbackQuery();
     await ctx.reply('<b>–û–¢–õ–ò–ß–ù–´–ô –í–´–ë–û–†!</b>\n\n–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –∞–¥–º–∏–Ω—É –∫–∞–Ω–∞–ª–∞: https://t.me/inteligg', {
        parse_mode: "HTML"
     })
})

bot.callbackQuery('#1', async (ctx) => {
    await ctx.answerCallbackQuery();
    await ctx.reply('–•–æ—Ä–æ—à–æ, –≤–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –ë–ï–°–ü–õ–ê–¢–ù–´–ô —Ç–≥ –∫–∞–Ω–∞–ª: https://t.me/luckyjetsignaliver', {
        
    })
})

























//–ú–∞—Ç—ã
bot.hears([/–ü–∏–∑–¥–µ—Ü/, /–ø–∏–∑–¥–µ—Ü/, /–°—É–∫–∞/, /—Å—É–∫–∞/, /–ë–ª—è—Ç—å/, /–±–ª—è—Ç—å/, /–ë–ª—è/, /–±–ª—è/, /–ù–∞—Ö—É–π/, /–Ω–∞—Ö—É–π/, /–•—É–π/, /—Ö—É–π/, /–°–æ—Å–∏/, /—Å–æ—Å–∏/, /–ü–∏–¥–æ—Ä/, /–ø–∏–¥–æ—Ä/, /–®–ª—é—Ö–∞/, /—à–ª—é—Ö–∞/], async (ctx) => {
    await ctx.reply('–ü–æ–ø—Ä–æ—à—É –≤–∞—Å –Ω–µ –≤—ã—Ä–∞–∂–∞—Ç—å—Å—è')
})

//—Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ
bot.on([':media', ':text', '::url', ':voice'], async (ctx) => {
    await ctx.reply('–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∫–∞–Ω–∞–ª–∞:    [–ê–î–ú–ò–ù](https://t.me/inteligg)', {
    parse_mode: 'MarkdownV2',
    disable_web_page_preview: false
    });
});





















//–û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö, –õ–£–ß–®–ï –ù–ï –¢–†–û–ì–ê–¢–¨, –ï–©–ï –ù–ï –®–ê–†–Æ!

bot.catch((err) => {
    const ctx = err.ctx;
    console.error(`Error while handling update ${ctx.update.update_id}:`);
 const e = err.error;

 if (e instanceof GrammyError) {
    console.error("Error in request:", e.description);
 } else if (e instanceof HttpError) {
    console.error("could not contact Telegram:", e);
 } else {
    console.error("Unknown error:", e);
 }
});

bot.start();